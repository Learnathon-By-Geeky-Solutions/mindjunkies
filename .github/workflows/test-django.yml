name: Django CI

on:
  workflow_call:
  workflow_dispatch:

jobs:
  django_test:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: .

    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.12, 3.13]

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install uv
        run: |
          python -m pip install --upgrade pip
          pip install uv

      - name: Install Dependencies
        run: |
          uv sync --all-groups

      - name: Create .env file
        run: |
          touch .env
          echo "GOOGLE_CLIENT_ID=${{ secrets.GOOGLE_CLIENT_ID }}" >> .env
          echo "GOOGLE_CLIENT_SECRET=${{ secrets.GOOGLE_CLIENT_SECRET }}" >> .env
          echo "GOOGLE_API_KEY=${{ secrets.GOOGLE_API_KEY }}" >> .env

          echo "EMAIL_HOST_USER=${{ secrets.EMAIL_HOST_USER }}" >> .env
          echo "EMAIL_HOST_PASSWORD=${{ secrets.EMAIL_HOST_PASSWORD }}" >>   .env
          echo "DEFAULT_FROM_EMAIL=${{ secrets.DEFAULT_FROM_EMAIL }}" >> .env

          echo "DATABASE_URL=${{ secrets.DATABASE_URL }}" >> .env
          echo "ALLOWED_HOSTS=${{ secrets.ALLOWED_HOSTS }}" >> .env

          echo "JITSI_APP_ID=${{ secrets.JITSI_APP_ID }}" >> .env
          echo "JITSI_SECRET=${{ secrets.JITSI_SECRET }}" >> .env

          echo "CLOUDINARY_NAME=${{ secrets.CLOUDINARY_NAME }}" >> .env
          echo "CLOUDINARY_API_KEY=${{ secrets.CLOUDINARY_API_KEY }}" >> .env
          echo "CLOUDINARY_API_SECRET=${{ secrets.CLOUDINARY_API_SECRET }}" >> .env

          echo "TEST_PASS=${{ secrets.TEST_PASS }}" >> .env
          echo "DJANGO_SETTINGS_MODULE=project.settings.test" >> .env
        shell: bash

      - name: Run Tests
        env:
          DJANGO_SETTINGS_MODULE: project.settings.test
        run: |
          uv run pytest -n auto --reuse-db